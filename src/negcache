config-parser.c:   OptionsItem->negcache = (yyvsp[(3) - (4)].number);
config-parser.c:   MyFree(OptionsItem->pidfile);
config-parser.c:   OptionsItem->pidfile = DupString((yyvsp[(3) - (4)].string));
config-parser.c:   OptionsItem->dns_fdlimit = (yyvsp[(3) - (4)].number);
config-parser.c:   MyFree(OptionsItem->scanlog);
config-parser.c:   OptionsItem->scanlog = DupString((yyvsp[(3) - (4)].string));
config-parser.y:   OptionsItem->negcache = $3;
config-parser.y:   MyFree(OptionsItem->pidfile);
config-parser.y:   OptionsItem->pidfile = DupString($3);
config-parser.y:   OptionsItem->dns_fdlimit = $3;
config-parser.y:   MyFree(OptionsItem->scanlog);
config-parser.y:   OptionsItem->scanlog = DupString($3);
config.c:   OptionsItem->negcache = 0;   /* 0 disabled negcache */
config.c:   OptionsItem->pidfile = DupString("bopm.pid");
config.c:   OptionsItem->dns_fdlimit = 50;
config.c:   OptionsItem->scanlog = NULL;
firedns.c:   if(fdns_fdinuse >= OptionsItem->dns_fdlimit)
firedns.c:      ufds = MyMalloc((sizeof *ufds) * OptionsItem->dns_fdlimit);
firedns.c:      if(size >= OptionsItem->dns_fdlimit)
firedns.c:      else if(fdns_fdinuse < OptionsItem->dns_fdlimit)
irc.c:      if (OptionsItem->negcache > 0)
main.c:   if (OptionsItem->scanlog)
main.c:      scanlog_open(OptionsItem->scanlog);
main.c:   pidout = fopen(OptionsItem->pidfile, "w");
main.c:      log_printf("MAIN -> Error opening %s: %s", OptionsItem->pidfile,
main.c:         if(OptionsItem->scanlog)
main.c:            scanlog_open(OptionsItem->scanlog);
negcache.c:   if (OptionsItem->negcache <= 0)
negcache.c:      if (now - n->seen <= OptionsItem->negcache)
negcache.c:   if ((now - n->seen) < OptionsItem->negcache)
scan.c:   if (OptionsItem->negcache > 0)
scan.c:   if (OptionsItem->negcache > 0)
scan.c:   if(OptionsItem->negcache > 0)
scan.c:   if(OptionsItem->negcache > 0)
scan.c:   if(!(OptionsItem->scanlog && scanlogfile))
